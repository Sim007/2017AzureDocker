{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/balance/balance.component.css","./src/app/balance/balance.component.html","./src/app/balance/balance.component.ts","./src/app/block.ts","./src/app/block/block.component.css","./src/app/block/block.component.html","./src/app/block/block.component.ts","./src/app/blockchain/blockchain.component.css","./src/app/blockchain/blockchain.component.html","./src/app/blockchain/blockchain.component.ts","./src/app/blocks.service.ts","./src/app/group.service.ts","./src/app/group.ts","./src/app/hash/hash.component.css","./src/app/hash/hash.component.html","./src/app/hash/hash.component.ts","./src/app/ipadress.service.ts","./src/app/message.service.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/push-service.service.ts","./src/app/rest.service.ts","./src/app/scbutton.ts","./src/app/scbuttons.service.ts","./src/app/scbuttons/scbuttons.component.css","./src/app/scbuttons/scbuttons.component.html","./src/app/scbuttons/scbuttons.component.ts","./src/app/scheader/scheader.component.css","./src/app/scheader/scheader.component.html","./src/app/scheader/scheader.component.ts","./src/app/server-socket.service.ts","./src/app/swirlcoinminer/swirlcoinminer.component.css","./src/app/swirlcoinminer/swirlcoinminer.component.html","./src/app/swirlcoinminer/swirlcoinminer.component.ts","./src/app/swirlcoinportal/swirlcoinportal.component.css","./src/app/swirlcoinportal/swirlcoinportal.component.html","./src/app/swirlcoinportal/swirlcoinportal.component.ts","./src/app/swirlcoinwallet/swirlcoinwallet.component.css","./src/app/swirlcoinwallet/swirlcoinwallet.component.html","./src/app/swirlcoinwallet/swirlcoinwallet.component.ts","./src/app/transaction.service.ts","./src/app/transaction.ts","./src/app/transaction/transaction.component.css","./src/app/transaction/transaction.component.html","./src/app/transaction/transaction.component.ts","./src/app/user.ts","./src/app/user/user.component.css","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/users.service.ts","./src/app/users/users.component.css","./src/app/users/users.component.html","./src/app/users/users.component.ts","./src/app/verify/verify.component.css","./src/app/verify/verify.component.html","./src/app/verify/verify.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SwirlcoinportalComponent }      from './swirlcoinportal/swirlcoinportal.component';\nimport { SwirlcoinwalletComponent }      from './swirlcoinwallet/swirlcoinwallet.component';\nimport { UserComponent }                 from './user/user.component';\nimport { BlockComponent }                from './block/block.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/portal', pathMatch: 'full' },\n  { path: 'portal', component: SwirlcoinportalComponent },\n  { path: 'wallet', component: SwirlcoinwalletComponent },\n  { path: 'user/:id', component: UserComponent },\n  { path: 'block/:id', component: BlockComponent  }\n];\n\n    \n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"/* AppComponent's private CSS styles */\\r\\nh1 {\\r\\n    font-size: 1.2em;\\r\\n    color: #999;\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\nh2 {\\r\\n    font-size: 2em;\\r\\n    margin-top: 0;\\r\\n    padding-top: 0;\\r\\n  }\\r\\nnav a {\\r\\n    padding: 5px 10px;\\r\\n    text-decoration: none;\\r\\n    margin-top: 10px;\\r\\n    display: inline-block;\\r\\n    background-color: #eee;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\nnav a:visited, a:link {\\r\\n    color: #607D8B;\\r\\n  }\\r\\nnav a:hover {\\r\\n    color: #039be5;\\r\\n    background-color: #CFD8DC;\\r\\n  }\\r\\nnav a.active {\\r\\n    color: #039be5;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { WebsocketService } from './server-socket.service';\nimport { MessageService } from './message.service';\nimport { IpadressService } from './ipadress.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ WebsocketService]\n})\n\nexport class AppComponent {\n  \n  ipAddress: any\n\n  constructor(\n    private messageService: MessageService,\n    private socketservice: WebsocketService,\n    private ipaddressService: IpadressService\n  ) {\n\t\t//pushService.messages.subscribe(msg => {\t\t\t\n    //  messageService.add('AppComponent: Response from websocket: ' + msg);\n    //});\n    //this.ipAddress = ipaddressService.getIpAddress().subscribe(ip => {\n    //  this.messageService.add('AppCompnent: getIpaddress: '+ JSON.parse(ip))\n    //})\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { Http, Response } from '@angular/http';\n// Material\nimport { MatButtonModule} from '@angular/material';\nimport { MatCheckboxModule} from '@angular/material';\nimport { MatDividerModule} from '@angular/material';\nimport { MatGridListModule} from '@angular/material';\nimport { MatCardModule } from '@angular/material';\nimport { MatGridTile} from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// Application components\nimport { AppComponent } from './app.component';\nimport { SwirlcoinwalletComponent } from './swirlcoinwallet/swirlcoinwallet.component';\nimport { SwirlcoinportalComponent } from './swirlcoinportal/swirlcoinportal.component';\nimport { SwirlcoinminerComponent } from './swirlcoinminer/swirlcoinminer.component';\nimport { GroupService } from './group.service';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MessageService } from './message.service';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ScheaderComponent } from './scheader/scheader.component';\nimport { ScbuttonsComponent } from './scbuttons/scbuttons.component';\nimport { ScbuttonsService } from './scbuttons.service';\nimport { HttpModule} from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { QueueingSubject } from 'queueing-subject';\nimport { Observable } from 'rxjs/Observable';\nimport { BlockchainComponent } from './blockchain/blockchain.component';\nimport { UserComponent } from './user/user.component';\nimport { UsersService } from './users.service';\nimport { UsersComponent } from './users/users.component';\nimport { BalanceComponent } from './balance/balance.component';\nimport { HashComponent } from './hash/hash.component';\nimport { BlocksService } from './blocks.service';\nimport { VerifyComponent } from './verify/verify.component';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { TransactionService } from './transaction.service';\nimport { IpadressService } from './ipadress.service'\nimport { RestService } from './rest.service';\nimport { WebsocketService } from './server-socket.service';\nimport { PushService } from './push-service.service';\nimport { BlockComponent } from './block/block.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SwirlcoinwalletComponent,\n    SwirlcoinportalComponent,\n    SwirlcoinminerComponent,\n    MessagesComponent,\n    ScheaderComponent,\n    ScbuttonsComponent,\n    BlockchainComponent,\n    UserComponent,\n    UsersComponent,\n    BalanceComponent,\n    HashComponent,\n    VerifyComponent,\n    TransactionComponent,\n    BlockComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatGridListModule,\n    MatInputModule,\n    MatChipsModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelectModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    HttpModule,\n  ],\n  \n  providers: [\n    GroupService,\n    MessageService,\n    ScbuttonsService,\n    UsersService,\n    BlocksService,\n    TransactionService,\n    IpadressService,\n    RestService,\n    WebsocketService,\n    PushService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/balance/balance.component.css\n// module id = ./src/app/balance/balance.component.css\n// module chunks = main","module.exports = \"<div [hidden]=\\\"!showBalance\\\">\\n  balance works!\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/balance/balance.component.html\n// module id = ./src/app/balance/balance.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-balance',\n  templateUrl: './balance.component.html',\n  styleUrls: ['./balance.component.css']\n})\n\n\nexport class BalanceComponent implements OnInit {\n  @Input() showBalance: boolean\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/balance/balance.component.ts","export class Block {\n    id: number;\n    ownerId: number;\n    nonce: number;\n    data: {};\n    hash: string;\n    previousHash: string;\n    constructor(values: Object = {}) {\n      Object.assign(this, values);\n    }\n  }\n  \n\n\n// WEBPACK FOOTER //\n// ./src/app/block.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/block/block.component.css\n// module id = ./src/app/block/block.component.css\n// module chunks = main","module.exports = \"<p>\\n  block works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/block/block.component.html\n// module id = ./src/app/block/block.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-block',\n  templateUrl: './block.component.html',\n  styleUrls: ['./block.component.css']\n})\nexport class BlockComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/block/block.component.ts","module.exports = \".small {\\r\\n    font-size: small;\\r\\n}\\r\\n.title {\\r\\n    font-size: small;\\r\\n    background-color: cornflowerblue;\\r\\n    color: darkslategray;\\r\\n}\\r\\n.card {\\r\\n    margin: 4px;\\r\\n    text-align: center;\\r\\n}\\r\\n.button {\\r\\n    text-align: right;\\r\\n}\\r\\n.swc {\\r\\n    text-align: right;\\r\\n    color: blue;\\r\\n}\\r\\n.visible-green {\\r\\n    font-size: small;\\r\\n    background: rgb(223, 240, 216);\\r\\n}\\r\\n.visible-red {\\r\\n    font-size: small;\\r\\n    background: rgb(250, 220, 220);\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/blockchain/blockchain.component.css\n// module id = ./src/app/blockchain/blockchain.component.css\n// module chunks = main","module.exports = \"<mat-divider></mat-divider>\\n<button mat-raised-button (click)=\\\"toggleBlocks()\\\">Show/hide blocks</button>\\n<div [hidden]=\\\"showBlocks\\\">\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"320px\\\">\\n    <mat-grid-tile *ngFor=\\\"let block of blocks\\\">\\n        <mat-card class=\\\"card\\\">\\n            <mat-card-title class=\\\"title\\\">Block #{{block.id}}</mat-card-title>\\n            <div class=\\\"small\\\">Nonce: {{block.nonce}}</div>\\n            <div class=\\\"small\\\">Previous hash: {{block.previousHash}}</div>\\n            <div class=\\\"small\\\">Hash: {{block.hash}}</div>\\n            <a mat-button routerLink=\\\"/block/{{block.id}}\\\">Show</a>\\n        </mat-card>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n</div>\\n<mat-divider></mat-divider>\\n<button mat-raised-button (click)=\\\"toggleTransactions()\\\">Show/hide pending Tx</button>\\n<button mat-raised-button (click)=\\\"createGenesisBlock()\\\">Create genesis block!</button>\\n<button mat-raised-button (click)=\\\"donateEveryUser()\\\">Donate!</button>\\n<button mat-raised-button (click)=\\\"deletePendingTransactions()\\\">Remove pending Tx</button>\\n<div [hidden]=\\\"showTransactions\\\">\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"250px\\\">\\n    <mat-grid-tile *ngFor=\\\"let transaction of transactions\\\">\\n        <mat-card class=\\\"card\\\">\\n            <mat-card-title class=\\\"title\\\">Transaction #{{transaction.id}}</mat-card-title>\\n            <div class=\\\"small\\\">{{transaction.publicKeyFrom}}</div>=>\\n            <div class=\\\"small\\\">{{transaction.publicKeyTo}}</div>\\n            <div class=\\\"swc\\\">Amount: {{transaction.amount}} SwC</div>\\n        </mat-card>\\n    </mat-grid-tile>\\n</mat-grid-list>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/blockchain/blockchain.component.html\n// module id = ./src/app/blockchain/blockchain.component.html\n// module chunks = main","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { TimerObservable } from \"rxjs/observable/TimerObservable\";\nimport { Router } from \"@angular/router\";\nimport { subscribeOn } from 'rxjs/operator/subscribeOn';\nimport { Block } from '../block'\nimport { GenericService } from '../generic.service'\nimport { User } from '../user'\nimport { UsersService } from '../users.service'\nimport { MessageService } from '../message.service';\nimport { Transaction } from '../transaction';\nimport { TransactionService } from '../transaction.service';\nimport { PushService } from '../push-service.service';\nimport { BlocksService } from '../blocks.service'\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n// Crypto\nimport * as crypto from 'crypto-js';\nimport * as sha256 from 'crypto-js/sha256';\n\n\n@Component({\n  selector: 'app-blockchain',\n  templateUrl: './blockchain.component.html',\n  styleUrls: ['./blockchain.component.css']\n})\nexport class BlockchainComponent implements OnInit {\n\n  blocks: Block[]\n  transactions: Transaction[]\n  users: User[]\n  genesis: Block\n  @Input() moderator: User\n  @Input() user: User\n  @Input() showBlocks: boolean\n  @Input() showTransactions: boolean\n  @Input() class: string[]\n\n  constructor(\n    private blocksService: BlocksService,\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private transactionService: TransactionService,\n    private pushService: PushService,\n    private zone: NgZone,\n    private router: Router\n  ) {\n    this.showBlocks = false\n    this.showTransactions = false\n  }\n\n  ngOnInit() {\n    this.showBlocks = false\n    this.showTransactions = false\n    this.zone.run(() => {\n      this.blocksService.items$.subscribe(items => {\n        this.blocks = items\n      })\n      this.usersService.getSharedItems()\n      this.usersService.items$.subscribe(items => {\n        this.users = items\n      })\n      this.blocksService.getSharedItems()\n      this.transactionService.transactions$.subscribe(transactions => {\n        this.transactions = transactions\n      })\n      this.transactionService.getSharedTransactions()\n    })\n  }\n\n  setColor(equal: boolean) {\n    if (equal) {\n      this.class = [\"visible-green\"]\n    } else {\n      this.class = [\"visible-red\"]\n    }\n  }\n\n  getUsers(): void {\n    this.usersService.items$\n      .subscribe(users => this.users = users);\n  }\n\n  public toggleBlocks() {\n    this.showBlocks = !this.showBlocks\n  }\n  public toggleTransactions() {\n    this.showTransactions = !this.showTransactions\n  }\n\n  public showBlock(id) {\n    this.messageService.add('BlockchainComponent: show block: ' + id)\n    this.router.navigate['/block/id']\n  }\n\n  public createGenesisBlock(): void {\n    this.deletePendingTransactions()\n    let countdown = TimerObservable.create(0, 200).take(3)\n    countdown.subscribe(i => {\n      this.messageService.add('BlockchainComponent: create genesis block: ' + i)\n      if (i == 0) {\n        this.blocksService.deleteAllSharedItem()\n      }\n      if (i == 1) {\n        this.genesis = {\n          id: 0,\n          ownerId: this.moderator.id,\n          nonce: 500,\n          data: {\n            tx: \"\"\n          },\n          hash: \"\",\n          previousHash: \"\"\n        }\n        this.genesis.hash = '' + sha256(\n          this.genesis.nonce +\n          this.genesis.previousHash +\n          this.genesis.data\n        )\n        this.blocksService.createSharedItem(new Block(this.genesis))\n      }\n    })\n  }\n\n  public donateEveryUser(): void {\n    let tx: Transaction = {\n      ownerId: this.moderator.id,\n      publicKeyFrom: this.moderator.publicKey,\n      amount: 5000,\n      id: 0,\n      publicKeyTo: null\n    };\n    let noUsers = this.users.length\n    let countdown = TimerObservable.create(0, 200).take(noUsers + 1)\n    countdown.subscribe(i => {\n      if (i == noUsers) {\n        if (this.blocks[0]) {\n          let nextBlock = new Block()\n          nextBlock['nonce'] = this.blocks[0].nonce\n          nextBlock['tx'] = this.transactionService.transactions\n          nextBlock['previousHash'] = this.blocks[0].hash\n          nextBlock['ownerId'] = this.moderator.id,\n            nextBlock.hash = '' + sha256(\n              nextBlock.nonce +\n              nextBlock.previousHash +\n              nextBlock.data\n            )\n          this.blocksService.createSharedItem(nextBlock)\n        }\n      } else {\n        let user = this.users[i]\n        if (user.id != this.moderator.id) {\n          this.messageService.add('BlockchainComponent: donateEveryUser: ' + user.id + ':' + this.moderator.nickName + '=>' + user.nickName)\n          tx['publicKeyTo'] = user.publicKey\n          this.transactionService.createSharedTransaction(tx)\n        }\n      }\n    })\n\n  }\n\n  public deletePendingTransactions(): void {\n    this.transactionService.deleteAllSharedTransactions()\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/blockchain/blockchain.component.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { TimerObservable } from \"rxjs/observable/TimerObservable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { MessageService } from './message.service';\nimport { Block } from './block';\nimport { environment } from '../environments/environment';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Options } from 'selenium-webdriver';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { RestService } from './rest.service';\nimport * as crypto from 'crypto-js'\nimport * as sha256 from 'crypto-js/sha256'\nimport { PushService } from './push-service.service';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n\n@Injectable()\nexport class BlocksService {\n  serviceName: string\n  serviceFilter: string\n  serviceParam: number\n  public items: Block[]\n  public items$: Subject<Block[]> = new BehaviorSubject(null)\n  message = {\n    event: 'RefreshBlocks',\n    message: ''\n  }\n\n\n  constructor(private messageService: MessageService,\n    private http: Http,\n    private pushService: PushService\n  ) {\n    this.serviceName = '/blocks/'\n    this.serviceFilter = '?ownerId='\n    this.serviceParam = 0\n    this.items = []\n  }\n\n  public getSharedItems(): void {\n    this.getAllItems().subscribe(items => {\n      this.messageService.add('GenericService: fetched items: ' + items.length);\n      items.forEach(item => {\n        this.items.push(new Block(item))\n      });\n      this.items$.next(items)\n    })\n  }\n\n  // API: POST \n  public createSharedItem(item: Block): void {\n    this.messageService.add('GenericService: create item');\n    this.createItem(item).subscribe(newItem => {\n      this.items.push(newItem)\n      this.messageService.add('GenericService: created item: ' + newItem.id);\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  // API: PUT\n  public updateSharedItem(item: Block): void {\n    this.messageService.add('GenericService: updated item: ' + item.id);\n    this.updateItem(item.id, item).subscribe(it => {\n      let myItems = this.items\n      myItems.forEach(myItem => {\n        if (myItem.id == it.id) {\n          this.items[myItem.id] = it\n        }\n      })\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n\n  // API: DELETE\n  public deleteSharedItemById(itemId: number): void {\n    this.messageService.add('GenericService: delete item: ' + itemId);\n    this.deleteItemById(itemId).subscribe(tr => {\n      this.items = this.items.filter(item => item.id != itemId)\n      this.messageService.add('GenericService: # of items: ' + this.items.length)\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  public deleteAllSharedItem(): void {\n    this.messageService.add('TransactionService: delete all transactions');\n    this.messageService.add('GenericService: delete all items');\n    if (this.items) {\n      let allItems = this.items\n      let noItems = allItems.length\n      let countdown = TimerObservable.create(0, 100).take(noItems + 1)\n      countdown.subscribe(i => {\n        if (i == noItems) {\n          this.items = []\n          this.items$.next(this.items)\n          this.pushService.messages.next(this.message)\n        } else {\n          this.deleteItemById(allItems[i].id).subscribe()\n        }\n      })\n    }\n  }\n\n\n\n  public getAllItems(): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName, opts)\n      .map(response => {\n        const items = response.json();\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  public getItems(userId): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName + this.serviceFilter + this.serviceParam, opts)\n      .map(response => {\n        const items = response.json();\n        this.messageService.add('RestService: fetched items: ' + items.length);\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    this.messageService.add('ApiService::handleError' + error);\n    return Observable.throw(error);\n  }\n  // API: POST \n  public createItem(item): Observable<any> {\n    this.messageService.add('ItemService: create item');\n    return this.http\n      .post(API_URL + this.serviceName, item, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: GET\n  public getItemById(itemId: number): Observable<any> {\n    this.messageService.add('ItemService: fetched item: ' + itemId);\n    return this.http\n      .get(API_URL + this.serviceName + itemId, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: PUT\n  public updateItem(itemId, items): Observable<any> {\n    this.messageService.add('ItemService: updated transaction: ' + itemId);\n    return this.http\n      .put(API_URL + this.serviceName + itemId, items, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: DELETE\n  public deleteItemById(itemId: number): Observable<null> {\n    this.messageService.add('ItemService: deleted itemId: ' + itemId);\n    return this.http\n      .delete(API_URL + this.serviceName + itemId, opts)\n      .map(response => null)\n      .catch(this.handleError);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/blocks.service.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { environment } from '../environments/environment';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Options } from 'selenium-webdriver';\nimport { Group } from './group';\nimport { MessageService } from './message.service';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n@Injectable()\nexport class GroupService {\n\n  constructor(\n    private messageService: MessageService,\n    private http: Http\n  ) { }\n\n  getGroups(): Observable<Group[]> {\n    return this.http\n      .get(API_URL + '/scgroups', opts)\n      .map(response => {\n        const groups = response.json();\n        this.messageService.add('GroupService: fetched groups: ' + groups.length);\n        return groups.map((scgroup) => new Group(scgroup));\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    this.messageService.add(`ApiService::handleError` + error);\n    return Observable.throw(error);\n  }\n  getGroup(id: number): Observable<Group> {\n    // Todo: send the message _after_ fetching the hero\n    return this.http\n      .get(API_URL + '/scgroups', opts)\n      .map(response => {\n        const scgroups = response.json();\n        this.messageService.add('GroupService: fetched group: ' + scgroups.id);\n        return new Group(scgroups.find(group => group.id === id));\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/group.service.ts","export class Group {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/group.ts","module.exports = \".visible-green {\\r\\n    font-weight: bold;\\r\\n    background: rgb(223, 240, 216);\\r\\n}\\r\\n.visible-red {\\r\\n    font-weight: bold;\\r\\n    background: rgb(250, 220, 220);\\r\\n}\\r\\n.container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n  }\\r\\n.container > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/hash/hash.component.css\n// module id = ./src/app/hash/hash.component.css\n// module chunks = main","module.exports = \"<div [hidden]=\\\"!showHash\\\">\\n  <div class=\\\"container\\\">\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"text1\\\" (ngModelChange)=\\\"sha1($event)\\\" placeholder=\\\"Text string 1\\\">\\n    </mat-form-field>\\n    <mat-form-field >\\n      <textarea [ngClass]=\\\"class\\\" matInput matTextareaAutosize [(ngModel)]=\\\"hash1\\\" disabled placeholder=\\\"Hash 1\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [(ngModel)]=\\\"text2\\\" (ngModelChange)=\\\"sha2($event)\\\" placeholder=\\\"Text string 2\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <textarea [ngClass]=\\\"class\\\" matInput matTextareaAutosize [(ngModel)]=\\\"hash2\\\" disabled placeholder=\\\"Hash 2\\\"></textarea>\\n    </mat-form-field>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/hash/hash.component.html\n// module id = ./src/app/hash/hash.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n// Crypto\nimport * as crypto from 'crypto-js';\nimport * as sha256 from 'crypto-js/sha256';\nimport { MessageService } from '../message.service';\n\n\n@Component({\n  selector: 'app-hash',\n  templateUrl: './hash.component.html',\n  styleUrls: ['./hash.component.css']\n})\nexport class HashComponent implements OnInit {\n  @Input() showHash: boolean\n  @Input() class: string[]\n  text1: string\n  hash1: string\n  text2: string\n  hash2: string\n\n\n  constructor(\n    private messageService: MessageService\n  ) { }\n\n  ngOnInit() {\n    this.hash1=\"\"\n    this.hash2=\"\"\n  }\n\n  public sha1(text) {\n    this.hash1 = sha256(text)\n    this.setColor(this.hash1.toString() == this.hash2.toString())\n  }\n  public sha2(text) {\n    this.hash2 = sha256(text)\n    this.setColor(this.hash1.toString() == this.hash2.toString())\n  }\n  setColor(equal: boolean) {\n    if (equal) {\n      this.class = [ \"visible-green\" ]\n    } else {\n      this.class = [ \"visible-red\" ]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/hash/hash.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class IpadressService {\n\n  constructor(private http: Http) { }\n\n //Get IP Adress using http://freegeoip.net/json/?callback\n  getIpAddress() {\n      return this.http\n            .get('http://freegeoip.net/json/?callback')\n            .map(response => response || {})\n            .catch(this.handleError);\n  }\n\n  private handleError(error: HttpErrorResponse):\n      Observable<any> {\n        //Log error in the browser console\n        console.error('observable error: ', error);\n\n        return Observable.throw(error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ipadress.service.ts","import { Injectable } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { TimerObservable } from \"rxjs/observable/TimerObservable\";\nimport { subscribeOn } from 'rxjs/operator/subscribeOn';\n\n@Injectable()\nexport class MessageService {\n  messages: string[] = [];\n  private subscription: Subscription[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n    this.setTimer();\n  }\n\n  clear() {\n    this.messages = []\n    this.subscription.shift().unsubscribe();\n  }\n\n  private setTimer() {\n    let timer = TimerObservable.create(1000000, 0);\n    this.subscription.push(timer.subscribe(t => {\n      this.clear();\n    }));\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.service.ts","module.exports = \"/* MessagesComponent's private CSS styles */\\r\\n.message {\\r\\n  font-size: 7pt;\\r\\n  color: darkgreen\\r\\n}\\r\\n.header {\\r\\n  font-size: 7pt;\\r\\n  color: darkgray\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n  <div class=\\\"header\\\" (click)=\\\"messageService.clear()\\\">Messages</div>\\n  <div class=\\\"message\\\" *ngFor='let message of messageService.messages'> {{message}} </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  private tick: string;\n\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  \n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { WebsocketService } from './server-socket.service';\nimport { environment } from '../environments/environment';\nimport { MessageService } from './message.service';\n\n@Injectable()\nexport class PushService {\n\tpublic messages: Subject<Message>;\n\n\tconstructor(\n\t\twsService: WebsocketService,\n\t\tprivate messageServer: MessageService\n\t) {\n\t\tthis.messages = <Subject<Message>>wsService\n\t\t\t.connect(environment.chatUrl)\n\t\t\t.map((response: MessageEvent): Message => {\n\t\t\t\tlet data = JSON.parse(response.data);\n\t\t\t\tmessageServer.add('PushService: message: ' + data.event + '/' + data.message)\n\t\t\t\treturn {\n\t\t\t\t\tevent: data.event,\n\t\t\t\t\tmessage: data.message\n\t\t\t\t}\n\t\t\t});\n\t}\n}\nexport interface Message {\n\tevent: string,\n\tmessage: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/push-service.service.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { MessageService } from './message.service';\nimport { environment } from '../environments/environment';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n@Injectable()\nexport class RestService {\n  serviceName: string\n  serviceFilter: string\n  serviceParam: number\n\n  constructor(private messageService: MessageService,\n    private http: Http) {\n  }\n\n\n  public getAllItems(): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName, opts)\n      .map(response => {\n        const items = response.json();\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  public getItems(userId): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName + this.serviceFilter + this.serviceParam, opts)\n      .map(response => {\n        const items = response.json();\n        this.messageService.add('RestService: fetched items: ' + items.length);\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    this.messageService.add('ApiService::handleError' + error);\n    return Observable.throw(error);\n  }\n  // API: POST \n  public createItem(item): Observable<any> {\n    this.messageService.add('ItemService: create item');\n    return this.http\n      .post(API_URL + this.serviceName, item, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: GET\n  public getItemById(itemId: number): Observable<any> {\n    this.messageService.add('ItemService: fetched item: ' + itemId);\n    return this.http\n      .get(API_URL + this.serviceName + itemId, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: PUT\n  public updateItem(itemId, items): Observable<any> {\n    this.messageService.add('ItemService: updated transaction: ' + itemId);\n    return this.http\n      .put(API_URL + this.serviceName + itemId, items, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: DELETE\n  public deleteItemById(itemId: number): Observable<null> {\n    this.messageService.add('ItemService: deleted itemId: ' + itemId);\n    return this.http\n      .delete(API_URL + this.serviceName + itemId, opts)\n      .map(response => null)\n      .catch(this.handleError);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest.service.ts","export class ScButton {\n    id: number;\n    disabled: string;\n    action: string;\n    name: string;\n    \n    constructor(values: Object = {}) {\n        Object.assign(this, values);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scbutton.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { MessageService } from './message.service';\nimport { ScButton } from './scbutton'; \nimport { environment } from '../environments/environment';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Options } from 'selenium-webdriver';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n@Injectable()\nexport class ScbuttonsService {\n  \n  constructor(private messageService: MessageService,\n    private http: Http) { }\n\n  public getButtons() :Observable<ScButton[]> {\n    return this.http\n      .get(API_URL + '/scbuttons', opts )\n      .map(response => {\n        const buttons = response.json();\n        this.messageService.add('ButtonService: fetched buttons: '+buttons.length);\n        return buttons.map((scbutton) => new ScButton(scbutton));\n    })\n    .catch(this.handleError);\n  }\n  private handleError (error: Response | any) {\n    this.messageService.add(`ApiService::handleError`+error);\n    return Observable.throw(error);\n  }\n  // API: POST \n  public createButton(scbutton: ScButton): Observable<ScButton> {\n    this.messageService.add('ButtonService: create button');\n    return this.http\n    .post(API_URL + '/scbuttons', scbutton, opts)\n    .map(response => {\n      return new ScButton(response.json());\n    })\n    .catch(this.handleError);\n  }\n\n  // API: GET\n  public getButtonById(buttonId: number): Observable<ScButton> {\n    this.messageService.add('ButtonService: fetched button: '+buttonId);\n    return this.http\n    .get(API_URL + '/scbuttons/' + buttonId, opts)\n    .map(response => {\n      return new ScButton(response.json());\n    })\n    .catch(this.handleError);\n  }\n\n  // API: PUT\n  public updateButton(scbutton: ScButton): Observable<ScButton>  {\n    this.messageService.add('ButtonService: updated buttons: '+scbutton.id);\n    return this.http\n    .put(API_URL + '/scbuttons/' + scbutton.id, scbutton, opts)\n    .map(response => {\n      return new ScButton(response.json());\n    })\n    .catch(this.handleError);\n  }\n\n  // API: DELETE\n  public deleteButtonById(buttonId: number): Observable<null> {\n    this.messageService.add('ButtonService: updated buttons: '+buttonId);\n    return this.http\n    .delete(API_URL + '/scbuttons/' + buttonId, opts)\n    .map(response => null)\n    .catch(this.handleError);\n  }  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scbuttons.service.ts","module.exports = \".button\\r\\n{\\r\\n    width: 130px;\\r\\n    margin: 4px\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scbuttons/scbuttons.component.css\n// module id = ./src/app/scbuttons/scbuttons.component.css\n// module chunks = main","module.exports = \"<button class=\\\"button\\\" mat-raised-button  *ngFor=\\\"let scbutton of scbuttons\\\" (click)=\\\"buttonClick(scbutton.id)\\\" [disabled]=\\\"scbutton.disabled\\\">{{scbutton.name}}</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scbuttons/scbuttons.component.html\n// module id = ./src/app/scbuttons/scbuttons.component.html\n// module chunks = main","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { ScbuttonsService } from '../scbuttons.service';\nimport { ScButton } from '../scbutton';\nimport { User } from '../user';\nimport { Block } from '../block';\nimport { MessageService } from '../message.service';\nimport { PushService } from '../push-service.service';\nimport { TransactionService } from '../transaction.service';\nimport { Transaction } from '../transaction';\nimport { NgZone } from '@angular/core';\nimport { BlocksService } from '../blocks.service';\n\n@Component({\n  selector: 'app-scbuttons',\n  templateUrl: './scbuttons.component.html',\n  styleUrls: ['./scbuttons.component.css']\n})\nexport class ScbuttonsComponent implements OnInit {\n  @Input() scbuttons: ScButton[];\n  @Input() user: User\n  transactions: Transaction[]\n  blocks: Block[]\n  toggles = {}\n\n  constructor(\n    private buttonsService: ScbuttonsService,\n    private messageService: MessageService,\n    private zone: NgZone,\n    private pushService: PushService,\n    private transactionService: TransactionService,\n    private blocksService: BlocksService\n  ) { }\n\n  ngOnInit() {\n    this.getScbuttons();\n    this.zone.run(() => {\n      this.pushService.messages.subscribe((myMessage) => {\n        this.messageService.add('SwirlCoinWallet: new push message: ' + myMessage.event)\n        if (myMessage.event == \"Wallet\") {\n          this.getScbuttons();\n        } \n        if (myMessage.event == \"RefreshTransaction\") {\n          this.transactionService.getSharedTransactions()\n        }\n\n        if (myMessage.event == \"Transaction\") {\n          this.transactionService.getSharedTransactions()\n        }\n        if (myMessage.event == \"RefreshBlocks\") {\n          this.blocksService.getSharedItems()\n        }\n      })\n    })\n  }\n  getScbuttons(): void {\n    this.buttonsService.getButtons()\n      .subscribe(scbuttons => {\n        this.scbuttons = scbuttons\n        this.scbuttons.forEach(element => {\n          this.toggles[element.name] = false\n        })\n\n      });\n  }\n  buttonClick(buttonId): void {\n    this.messageService.add('SwirlCoinWallet: buttonClick: ' + this.scbuttons[buttonId].name)\n    this.scbuttons.forEach(element => {\n      element.id == buttonId ?\n        this.toggles[element.name] = !this.toggles[element.name] :\n        this.toggles[element.name] = false\n    })\n  }\n\n  getToggles(name) {\n    return this.toggles[name]\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scbuttons/scbuttons.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scheader/scheader.component.css\n// module id = ./src/app/scheader/scheader.component.css\n// module chunks = main","module.exports = \"<div>\\n    <h4><img src=\\\"assets/images/SwirlCoin32.png\\\">\\n    SwirlCoin {{pageName}} \\n  </h4>\\n</div>\\n<mat-divider></mat-divider>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scheader/scheader.component.html\n// module id = ./src/app/scheader/scheader.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scheader',\n  templateUrl: './scheader.component.html',\n  styleUrls: ['./scheader.component.css']\n})\nexport class ScheaderComponent implements OnInit {\n\n  @Input() pageName;\n  @Input() groupName;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scheader/scheader.component.ts","// Many thanks to https://tutorialedge.net/typescript/angular/angular-websockets-tutorial/\n//\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { Observer } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Rx';\nimport { MessageService } from './message.service';\n\n@Injectable()\nexport class WebsocketService {\n  constructor(private messageService: MessageService) { }\n\n  private subject: Subject<MessageEvent>;\n\n  public connect(url): Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      this.messageService.add(\"WebsocketService: Successfully connected: \" + url);\n    }\n    return this.subject;\n  }\n\n  private create(url): Subject<MessageEvent> {\n    let ws = new WebSocket(url);\n    let observable = Observable.create(\n      (obs: Observer<MessageEvent>) => {\n        ws.onmessage = obs.next.bind(obs);\n        ws.onerror = obs.error.bind(obs);\n        ws.onclose = obs.complete.bind(obs);\n        return ws.close.bind(ws);\n      })\n    let observer = {\n      next: (data: Object) => {\n        this.messageService.add(\"WebsocketService: readyState: \" + ws.readyState);\n        if (ws.readyState === WebSocket.CLOSED) {\n          this.messageService.add(\"WebsocketService: closed, reopening\");\n          return false;\n        }\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify(data));\n          return true;\n        }\n      }\n    }\n    return Subject.create(observer, observable);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/server-socket.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinminer/swirlcoinminer.component.css\n// module id = ./src/app/swirlcoinminer/swirlcoinminer.component.css\n// module chunks = main","module.exports = \"<p>\\n  swirlcoinminer works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinminer/swirlcoinminer.component.html\n// module id = ./src/app/swirlcoinminer/swirlcoinminer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-swirlcoinminer',\n  templateUrl: './swirlcoinminer.component.html',\n  styleUrls: ['./swirlcoinminer.component.css']\n})\nexport class SwirlcoinminerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/swirlcoinminer/swirlcoinminer.component.ts","module.exports = \"/* DashboardComponent's private CSS styles */\\r\\n[class*='col-'] {\\r\\n    float: left;\\r\\n    padding-right: 20px;\\r\\n    padding-bottom: 20px;\\r\\n  }\\r\\n[class*='col-']:last-of-type {\\r\\n    padding-right: 0;\\r\\n  }\\r\\na {\\r\\n    text-decoration: none;\\r\\n  }\\r\\n*, *:after, *:before {\\r\\n    -webkit-box-sizing: border-box;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\nh3 {\\r\\n    text-align: center; margin-bottom: 0;\\r\\n  }\\r\\nh4 {\\r\\n    position: relative;\\r\\n  }\\r\\n.grid {\\r\\n    margin: 0;\\r\\n  }\\r\\n.col-1-4 {\\r\\n    width: 25%;\\r\\n  }\\r\\n.module {\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    color: #eee;\\r\\n    max-height: 120px;\\r\\n    min-width: 120px;\\r\\n    background-color: #607D8B;\\r\\n    border-radius: 2px;\\r\\n  }\\r\\n.module:hover {\\r\\n    background-color: #EEE;\\r\\n    cursor: pointer;\\r\\n    color: #607d8b;\\r\\n  }\\r\\n.grid-pad {\\r\\n    padding: 10px 0;\\r\\n  }\\r\\n.grid-pad > [class*='col-']:last-of-type {\\r\\n    padding-right: 20px;\\r\\n  }\\r\\n@media (max-width: 600px) {\\r\\n    .module {\\r\\n      font-size: 10px;\\r\\n      max-height: 75px; }\\r\\n  }\\r\\n@media (max-width: 1024px) {\\r\\n    .grid {\\r\\n      margin: 0;\\r\\n    }\\r\\n    .module {\\r\\n      min-width: 60px;\\r\\n    }\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinportal/swirlcoinportal.component.css\n// module id = ./src/app/swirlcoinportal/swirlcoinportal.component.css\n// module chunks = main","module.exports = \"<app-scheader [pageName]=\\\"pageName\\\"></app-scheader>\\n<app-user *ngIf=\\\"user!=null\\\" [user]=\\\"user\\\" [editUser]=\\\"editUser\\\"></app-user>\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let group of groups\\\" class=\\\"button btn-primary btn-sm\\\" routerLink=\\\"/wallet\\\">\\n    {{group.name}}\\n  </a>\\n</div>\\n<span *ngFor=\\\"let button of buttons\\\" (click)=\\\"toggleButtonState(button.id)\\\">\\n  <button mat-raised-button [disabled]=\\\"button.disabled\\\" >{{button.name}}</button>\\n</span>\\n<mat-tab-group>\\n  <mat-tab label=\\\"Users\\\">\\n    <app-users [showUsers]=\\\"false\\\"></app-users>\\n  </mat-tab>\\n<mat-tab label=\\\"Blockchain\\\">\\n  <app-blockchain [showBlocks]=\\\"false\\\" [showTransactions]=\\\"false\\\" [moderator]=\\\"user\\\"></app-blockchain>\\n</mat-tab>\\n<mat-tab label=\\\"Messages\\\">\\n  <app-messages></app-messages>\\n</mat-tab>\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinportal/swirlcoinportal.component.html\n// module id = ./src/app/swirlcoinportal/swirlcoinportal.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PushService } from '../push-service.service';\nimport { Group } from '../group';\nimport { NgZone } from '@angular/core';\nimport { GroupService } from '../group.service';\nimport { UserComponent } from '../user/user.component';\nimport { UsersService } from '../users.service';\nimport { User } from '../user'; import { ScheaderComponent } from '../scheader/scheader.component';\nimport { ScButton } from '../scbutton';\nimport { ScbuttonsService } from '../scbuttons.service';\nimport { AppComponent } from '../app.component';\nimport { MessageService } from '../message.service';\nimport { TransactionService } from '../transaction.service';\nimport { Transaction } from '../transaction';\n\n@Component({\n  selector: 'app-swirlcoinportal',\n  templateUrl: './swirlcoinportal.component.html',\n  styleUrls: ['./swirlcoinportal.component.css']\n})\nexport class SwirlcoinportalComponent implements OnInit {\n  groups: Group[];\n  users: User[]\n  pageName = \"Portal\";\n  buttons: ScButton[];\n  transactions: Transaction[]\n  editUser: boolean\n  userId: any\n  user: User\n\n\n  private messageWallet = {\n    event: 'Wallet',\n    message: 'Button changed'\n  }\n\n  constructor(\n    private pushService: PushService,\n    private usersService: UsersService,\n    private groupService: GroupService,\n    private messageService: MessageService,\n    private buttonService: ScbuttonsService,\n    private transactionService: TransactionService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.zone.run(() => {\n      this.usersService.getSharedItems()\n      this.usersService.items$.subscribe(items => {\n        this.users = items\n        if (items) {\n          this.userId = 1\n          if (this.userId != null) {\n            this.user = this.users.filter(user => user.id == this.userId)[0]\n            this.messageService.add('SwirlCoinWallet: getUser: ' + this.userId)\n            this.editUser = false\n          } \n        }\n      })\n      this.getGroups();\n      this.getButtons();\n      this.transactionService.transactions$.subscribe(transactions => this.transactions = transactions)\n      this.pushService.messages.subscribe((myMessage) => {\n        this.messageService.add('SwirlCoinPortal: new push message: ' + myMessage.event)\n        if (myMessage.event == \"Transaction\") {\n          this.transactionService.getSharedTransactions()\n        }\n        if (myMessage.event == \"RefreshTransaction\") {\n          this.transactionService.getSharedTransactions()\n        }\n        if (myMessage.event == \"RefreshUsers\") {\n          this.usersService.getSharedItems()\n        }\n      })\n    })\n  }\n  getGroups(): void {\n    this.groupService.getGroups()\n      .subscribe(groups => this.groups = groups);\n  }\n  getButtons(): void {\n    this.buttonService.getButtons().subscribe(buttons => this.buttons = buttons);\n  }\n  toggleButtonState(id: number) {\n    if (this.buttons[id].disabled == \"true\") {\n      this.buttons[id].disabled = \"false\";\n    } else {\n      this.buttons[id].disabled = \"true\";\n    }\n    this.buttonService.updateButton(this.buttons[id]).subscribe(button => this.buttons[id] = button);\n    this.pushService.messages.next(this.messageWallet);\n  }\n\n  ngOnDestroy() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/swirlcoinportal/swirlcoinportal.component.ts","module.exports = \".container {\\r\\n  min-height: 300px\\r\\n}\\r\\n.buttons {\\r\\n  margin: 4px;\\r\\n  min-block-size: 100px\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinwallet/swirlcoinwallet.component.css\n// module id = ./src/app/swirlcoinwallet/swirlcoinwallet.component.css\n// module chunks = main","module.exports = \"<app-scheader [pageName]=\\\"pageName\\\"></app-scheader>\\n<div class=\\\"container\\\">\\n    <app-user></app-user>\\n    <app-transaction [showTransaction]=\\\"walletButtons.getToggles('Send SC')\\\" ></app-transaction>\\n    <app-balance [showBalance]=\\\"walletButtons.getToggles('Balance')\\\"></app-balance>\\n    <app-hash [showHash]=\\\"walletButtons.getToggles('Hash')\\\"></app-hash>\\n    <app-verify [blocks]=\\\"blocks\\\" [showVerifyBC]=\\\"walletButtons.getToggles('Verify blockchain')\\\"></app-verify>\\n</div>\\n<mat-divider></mat-divider>\\n<div class=\\\"buttons\\\">\\n    <app-scbuttons #walletButtons></app-scbuttons>\\n</div>\\n<mat-divider></mat-divider>\\n<app-messages></app-messages>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/swirlcoinwallet/swirlcoinwallet.component.html\n// module id = ./src/app/swirlcoinwallet/swirlcoinwallet.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { NgZone } from '@angular/core';\nimport { PushService } from '../push-service.service';\nimport { ScButton } from '../scbutton';\nimport { ScbuttonsService } from '../scbuttons.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MessageService } from '../message.service';\nimport { UserComponent } from '../user/user.component';\nimport { UsersService } from '../users.service';\nimport { User } from '../user';\nimport { BlocksService } from '../blocks.service';\nimport { Block } from '../block';\n\n\n@Component({\n  selector: 'app-swirlcoinwallet',\n  templateUrl: './swirlcoinwallet.component.html',\n  styleUrls: ['./swirlcoinwallet.component.css']\n})\n\nexport class SwirlcoinwalletComponent implements OnInit {\n\n  blocks: Block[]\n  buttons: ScButton[]\n  userId: any\n  user: User\n  users: User[]\n  editUser: boolean\n  pageName = \"Wallet\"\n\n  private socketSubscription: Subscription\n\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private buttonService: ScbuttonsService,\n    private messageService: MessageService,\n    private pushService: PushService,\n    private zone: NgZone,\n    private usersService: UsersService,\n  ) { }\n\n  ngOnInit(): void {\n    this.buttonService.getButtons().subscribe(buttons => {\n      this.buttons = buttons\n    })\n    this.usersService.serviceGoal == \"Wallet\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/swirlcoinwallet/swirlcoinwallet.component.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { TimerObservable } from \"rxjs/observable/TimerObservable\";\nimport { Transaction } from './transaction'\nimport { MessageService } from './message.service';\nimport { environment } from '../environments/environment';\nimport { Options } from 'selenium-webdriver';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { RestService } from './rest.service';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { HttpClient } from 'selenium-webdriver/http';\nimport { PushService } from './push-service.service';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n@Injectable()\nexport class TransactionService {\n  serviceName: string\n  serviceFilter: string\n  serviceParam: number\n  public transactions: Transaction[]\n  public transactions$: Subject<Transaction[]> = new BehaviorSubject(null)\n  message = {\n    event: 'RefreshTransaction',\n    message: ''\n  }\n\n  constructor(\n    private messageService: MessageService,\n    private http: Http,\n    private pushService: PushService\n  ) {\n    this.serviceName = \"/transactions/\"\n    this.serviceFilter = \"?ownerId=\"\n    this.transactions = []\n  }\n\n  public getSharedTransactions(): void {\n    this.getAllItems().subscribe(transactions => {\n      this.messageService.add('TransactionService: fetched transactions: ' + transactions.length);\n      this.transactions = []\n      transactions.forEach(transaction => {\n        this.transactions.push(new Transaction(transaction))\n      });\n      this.transactions$.next(transactions)\n    })\n  }\n\n  // API: POST \n  public createSharedTransaction(transaction: Transaction): void {\n    this.messageService.add('TransactionService: create transaction');\n    this.createItem(transaction).subscribe(newTransaction => {\n      this.transactions.push(newTransaction)\n      this.messageService.add('TransactionService: created transaction: ' + newTransaction.id);\n      this.transactions$.next(this.transactions)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  // No PUT !\n\n  // API: DELETE\n  public deleteSharedTransactionById(transactionId: number): void {\n    this.messageService.add('TransactionService: delete transaction: ' + transactionId);\n    this.deleteItemById(transactionId).subscribe(tr => {\n      this.transactions = this.transactions.filter(transaction => transaction.id != transactionId)\n      this.messageService.add('TransactionService: # of transactions: ' + this.transactions.length)\n      this.transactions$.next(this.transactions)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  public deleteAllSharedTransactions(): void {\n    this.messageService.add('TransactionService: delete all transactions');\n    if (this.transactions) {\n      let allTransactions = this.transactions\n      let noItems = allTransactions.length\n      this.messageService.add('TransactionService: delete all transactions' + this.transactions.length);\n      let countdown = TimerObservable.create(0, 100).take(noItems + 1)\n      countdown.subscribe(i => {\n        if (i == noItems) {\n          this.transactions = []\n          this.transactions$.next(this.transactions)\n          this.pushService.messages.next(this.message)\n        } else {\n          this.deleteItemById(allTransactions[i].id).subscribe()\n        }\n      })\n    }\n  }\n\n  public getAllItems(): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName, opts)\n      .map(response => {\n        const items = response.json();\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  public getItems(userId): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName + this.serviceFilter + this.serviceParam, opts)\n      .map(response => {\n        const items = response.json();\n        this.messageService.add('RestService: fetched items: ' + items.length);\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    this.messageService.add('ApiService::handleError' + error);\n    return Observable.throw(error);\n  }\n  // API: POST \n  public createItem(item): Observable<any> {\n    this.messageService.add('ItemService: create item');\n    return this.http\n      .post(API_URL + this.serviceName, item, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: GET\n  public getItemById(itemId: number): Observable<any> {\n    this.messageService.add('ItemService: fetched item: ' + itemId);\n    return this.http\n      .get(API_URL + this.serviceName + itemId, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: PUT\n  public updateItem(itemId, items): Observable<any> {\n    this.messageService.add('ItemService: updated transaction: ' + itemId);\n    return this.http\n      .put(API_URL + this.serviceName + itemId, items, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: DELETE\n  public deleteItemById(itemId: number): Observable<null> {\n    this.messageService.add('ItemService: deleted itemId: ' + itemId);\n    return this.http\n      .delete(API_URL + this.serviceName + itemId, opts)\n      .map(response => null)\n      .catch(this.handleError);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/transaction.service.ts","export class Transaction {\n    id: number\n    publicKeyFrom: string\n    publicKeyTo: string\n    amount: number\n    ownerId: number\n    \n    constructor(values: Object = {}) {\n        Object.assign(this, values);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/transaction.ts","module.exports = \".small {\\r\\n    font-size: small;\\r\\n}\\r\\n.card {\\r\\n    margin: 4px;\\r\\n    text-align: center;\\r\\n}\\r\\n.button {\\r\\n    text-align: right;\\r\\n}\\r\\n.swc {\\r\\n    text-align: right;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transaction/transaction.component.css\n// module id = ./src/app/transaction/transaction.component.css\n// module chunks = main","module.exports = \"<div [hidden]=\\\"!showTransaction\\\">\\n  <div>Add new transaction or view pending transactions</div>\\n  <div *ngIf=\\\"newTransaction!=null\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"To\\\" [(ngModel)]=\\\"newTransaction.publicKeyTo\\\" (ngModelChange)=\\\"userSelect($event)\\\">\\n        <mat-option *ngFor=\\\"let user of users\\\" [value]=\\\"user.id\\\">\\n          {{ user.nickName }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <div>\\n        <input type=\\\"number\\\" width=\\\"100%\\\" matInput [(ngModel)]=\\\"newTransaction.amount\\\" placeholder=\\\"Amount of SwirlCoins\\\">\\n      </div>\\n    </mat-form-field>\\n  </div>\\n  <button [disabled]=\\\"newTransaction!=null\\\" mat-raised-button (click)=\\\"addTransaction()\\\">Add</button>\\n  <button [disabled]=\\\"newTransaction==null\\\" mat-raised-button (click)=\\\"saveTransaction()\\\">Save</button>\\n  <button [disabled]=\\\"transactions==null\\\" mat-raised-button (click)=\\\"checkTransactions()\\\">Check</button>\\n  <div *ngFor=\\\"let transaction of transactions\\\">\\n    <mat-card class=\\\"card\\\">\\n      <div class=\\\"small\\\">{{transaction.publicKeyFrom}} => {{transaction.publicKeyTo}}</div>\\n      <div class=\\\"swc\\\">Amount: {{transaction.amount}} SwC\\n      </div>\\n      <button class=\\\"button\\\" *ngIf=\\\"user.publicKey==transaction.publicKeyFrom\\\" mat-button color=\\\"accent\\\" (click)=\\\"deleteTransaction(transaction.id)\\\">Remove</button>\\n    </mat-card>\\n\\n  </div>\\n</div>\\n<mat-divider></mat-divider>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transaction/transaction.component.html\n// module id = ./src/app/transaction/transaction.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { User } from '../user';\nimport { UsersService } from '../users.service'\nimport { Transaction } from '../transaction';\nimport { TransactionService } from '../transaction.service'\nimport { Group } from '../group';\nimport { GroupService } from '../group.service';\nimport { MessageService } from '../message.service';\nimport 'rxjs/add/operator/switchMap';\nimport { PushService, Message } from '../push-service.service';\nimport { NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  @Input() userId: number\n  @Input() newTransaction: Transaction\n  @Input() showTransaction: boolean\n  @Input() transactions: Transaction[]\n  @Input() users: User[]\n  user: User\n  pageName = \"Transaction edit\"\n  groupname = \"\"\n  data$: any\n\n\n  constructor(\n    private transactionService: TransactionService,\n    private usersService: UsersService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private zone: NgZone,\n    private messageService: MessageService,\n    private pushService: PushService\n  ) {\n  }\n\n  ngOnInit() {\n    this.userId = +localStorage.getItem('userId')\n    this.zone.run(() => {\n      this.transactionService.getSharedTransactions()\n      this.transactionService.transactions$.subscribe(items => {\n        this.transactions = items\n      })\n      this.usersService.getSharedItems()\n      this.usersService.items$.subscribe(items => {\n        this.users = items\n        if (items) {\n          this.user = this.users.filter(user => user.id == this.userId)[0]\n        }\n      })\n    })\n  }\n\n\n  public userSelect(id): void {\n    this.messageService.add('TransactionComponent: userSelected: ' + id)\n    this.newTransaction.publicKeyTo = this.users[id].publicKey\n  }\n\n  public addTransaction(): void {\n    this.newTransaction = new (Transaction)\n    this.newTransaction.ownerId = this.userId\n    this.newTransaction.publicKeyFrom = this.user.publicKey\n  }\n  public deleteTransaction(id): void {\n    this.transactionService.deleteSharedTransactionById(id)\n  }\n  public saveTransaction(): void {\n    let transaction = {\n      ownerId: this.userId,\n      amount: this.newTransaction.amount,\n      publicKeyFrom: this.newTransaction.publicKeyFrom,\n      publicKeyTo: this.newTransaction.publicKeyTo\n    }\n    let message = {\n      event: 'Transaction',\n      message: JSON.stringify(transaction)\n    }\n    this.transactionService.createSharedTransaction(this.newTransaction)\n    this.pushService.messages.next(message)\n    this.newTransaction = null\n  }\n  public checkTransactions(): void {\n\n  }\n\n  toggle(): void {\n    this.showTransaction = !this.showTransaction\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/transaction/transaction.component.ts","export class User {\n\n    id: number\n    nickName: string\n    publicKey: string\n    group: number\n    blockchain: string[]\n\n    constructor(values: Object = {}) {\n        Object.assign(this, values);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.ts","module.exports = \".container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n  }\\r\\n  \\r\\n.container > * {\\r\\n    width: 100%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user.component.css\n// module id = ./src/app/user/user.component.css\n// module chunks = main","module.exports = \"<div  *ngIf=\\\"user!=null\\\" [hidden]=\\\"!editUser\\\">\\n  <div class=\\\"container\\\">\\n    Please give or edit user attributes:\\n    <mat-form-field>\\n      <input required width=\\\"100%\\\" matInput [(ngModel)]=\\\"user.nickName\\\" placeholder=\\\"Nickname\\\">\\n    </mat-form-field>\\n    <mat-chip-list>\\n      <mat-chip [selected]=\\\"user.group===group.id\\\" *ngFor=\\\"let group of groups\\\" (click)=\\\"groupSelect(group.id)\\\" ngDefaultControl>{{group.name}}</mat-chip>\\n    </mat-chip-list>\\n    <mat-form-field>\\n      <input readonly matInput [(ngModel)]=\\\"user.publicKey\\\" placeholder=\\\"Public key\\\">\\n    </mat-form-field>\\n    <button mat-raised-button (click)=\\\"updateUser(user)\\\">Save</button>\\n  </div>\\n</div>\\n<div *ngIf=\\\"user!=null\\\"  class=\\\"container\\\" [hidden]=\\\"editUser\\\" (click)=\\\"toggle()\\\">\\n  {{user.id}} Nickname: {{user.nickName}} Group: {{groupname}}\\n</div>\\n<mat-divider></mat-divider>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user.component.html\n// module id = ./src/app/user/user.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { User } from '../user';\nimport { UsersService } from '../users.service'\nimport { Group } from '../group';\nimport { GroupService } from '../group.service';\nimport { MessageService } from '../message.service';\nimport 'rxjs/add/operator/switchMap';\n// Crypto\nimport * as crypto from 'crypto-js';\nimport * as sha256 from 'crypto-js/sha256';\nimport { PushService } from '../push-service.service';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  @Input() user: User\n  @Input() groups: Group[]\n  @Input() editUser: boolean\n  users: User[]\n  pageName = \"User edit\"\n  groupname = \"\"\n\n  constructor(\n    private groupService: GroupService,\n    private usersService: UsersService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private messageService: MessageService,\n    private pushService: PushService\n  ) {\n  }\n\n  private setGroupname() {\n    let group = this.groups.filter(group => this.user.group == group.id);\n    this.groupname = group[0].name;\n    this.messageService.add('UserComponent: setGroupname: ' + this.groupname)\n  }\n\n  updateUser(): void {\n    this.user.id = this.usersService.serviceLastUserId\n    this.user.publicKey = '' + sha256(this.user.nickName + this.user.id + this.user.group)\n    this.usersService.updateSharedItem(this.user)\n    this.editUser = false\n  }\n\n  ngOnInit() {\n    this.getGroups()\n    this.usersService.getSharedItems()\n    this.usersService.items$.subscribe(users => {\n      this.users = users\n      if (this.user == null && this.users !=null) {\n        this.getUser()\n      }\n    });\n  }\n\n  getUser() {\n    let userId = this.route.snapshot.paramMap.get('id');\n    if (userId != null) {\n      this.messageService.add('UserComponent: ngOnInit: ' + userId)\n      this.user = this.users.filter(user => user.id == +userId)[0]\n      this.editUser = true\n      this.setGroupname()\n    } else {\n      userId = localStorage.getItem('userId')\n      if (this.user == null) {\n        if (userId) {\n          this.user = this.users.filter(user => user.id == +userId)[0]\n          if (this.user) {\n          this.editUser = false\n          this.setGroupname()\n          } else {\n            this.createUser()\n          }\n        } else {\n          this.createUser()\n        }\n      }\n    }\n  }\n\n  createUser() {\n    this.usersService.serviceGoal = \"Wallet\"\n    this.user = new User({ \"nickName\": \"\", \"privateKey\": \"\", \"publicKey\": \"\", \"group\": \"\", blockchain: [] })\n    this.usersService.createSharedItem(this.user)\n    this.editUser = true\n  }\n\n  toggle(): void {\n    this.editUser = !this.editUser\n  }\n  getGroups(): void {\n    this.groupService.getGroups()\n      .subscribe(groups => {\n        this.groups = groups\n      });\n  }\n  public groupSelect(id): void {\n    this.messageService.add('UserComponent: groupSelect: ' + id)\n    this.user.group = id\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.component.ts","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { TimerObservable } from \"rxjs/observable/TimerObservable\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { User } from './user';\nimport { environment } from '../environments/environment';\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Options } from 'selenium-webdriver';\nimport { PushService } from './push-service.service';\n\nconst API_URL = environment.apiUrl;\nlet headers = new Headers();\nheaders.append('Content-type', 'application/json');\nlet opts = new RequestOptions();\nopts.headers = headers;\n\n@Injectable()\nexport class UsersService {\n  serviceName: string\n  serviceFilter: string\n  serviceParam: number\n  serviceGoal: string\n  serviceLastUserId: number\n  public items: User[]\n  public items$: Subject<User[]> = new BehaviorSubject(null)\n  message = {\n    event: 'RefreshUsers',\n    message: ''\n  }\n\n\n  constructor(private messageService: MessageService,\n    private http: Http,\n    private pushService: PushService\n  ) {\n    this.serviceName = '/users/'\n    this.serviceFilter = ''\n    this.serviceParam = 0\n    this.serviceGoal = \"normal\"\n    this.serviceLastUserId = 0\n    this.items = []\n  }\n\n  public getSharedItems(): void {\n    this.getAllItems().subscribe(items => {\n      this.messageService.add('GenericService: fetched items: ' + items.length);\n      this.items=[]\n      items.forEach(item => {\n        this.items.push(new User(item))\n      });\n      this.items$.next(items)\n    })\n  }\n\n  public getSharedItembyid(itemId): User {\n    let item = this.items.filter(it => it.id == itemId)[0]\n    if (item != null) {\n      return item\n    } else {\n      this.getItemById(itemId).subscribe(item => {\n        this.messageService.add('GenericService: fetched item: ' + itemId);\n        this.items$.next(item)\n      })\n    }\n  }\n\n  // API: POST \n  public createSharedItem(item: User): void {\n    this.messageService.add('GenericService: create item');\n    this.createItem(item).subscribe(newItem => {\n      this.items.push(newItem)\n      this.messageService.add('GenericService: created item: ' + newItem.id);\n      if (this.serviceGoal == \"Wallet\") {\n        localStorage.setItem('userId', newItem.id)\n        this.serviceLastUserId = newItem.id\n        this.messageService.add('GenericService: saved last item: ' + newItem.id);\n      }\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  // API: PUT\n  public updateSharedItem(item: User): void {\n    this.messageService.add('GenericService: updated item: ' + item.id);\n    this.updateItem(item.id, item).subscribe(it => {\n      let myItems = this.items\n      myItems.forEach(myItem => {\n        if (myItem.id == it.id) {\n          this.items[myItem.id] = it\n        }\n      })\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n\n  // API: DELETE\n  public deleteSharedItemById(itemId: number): void {\n    this.messageService.add('GenericService: delete item: ' + itemId);\n    this.deleteItemById(itemId).subscribe(tr => {\n      this.items = this.items.filter(item => item.id != itemId)\n      this.messageService.add('GenericService: # of items: ' + this.items.length)\n      this.items$.next(this.items)\n      this.pushService.messages.next(this.message)\n    })\n  }\n\n  public deleteAllSharedItem(): void {\n    this.messageService.add('GenericService: delete all items');\n    if (this.items) {\n      let allItems = this.items\n      let noItems = allItems.length\n      let countdown = TimerObservable.create(0, 300).take(noItems + 1)\n      countdown.subscribe(i => {\n        if (i == noItems) {\n          this.items = []\n          this.items$.next(this.items)\n          this.pushService.messages.next(this.message)\n        } else {\n          this.deleteItemById(allItems[i].id).subscribe()\n        }\n      })\n    }\n  }\n\n\n\n  private getAllItems(): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName, opts)\n      .map(response => {\n        const items = response.json();\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  private getItems(userId): Observable<any> {\n    return this.http\n      .get(API_URL + this.serviceName + this.serviceFilter + this.serviceParam, opts)\n      .map(response => {\n        const items = response.json();\n        this.messageService.add('RestService: fetched items: ' + items.length);\n        return items;\n      })\n      .catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    this.messageService.add('ApiService::handleError' + error);\n    return Observable.throw(error);\n  }\n  // API: POST \n  private createItem(item): Observable<any> {\n    this.messageService.add('ItemService: create item');\n    return this.http\n      .post(API_URL + this.serviceName, item, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: GET\n  private getItemById(itemId: number): Observable<any> {\n    this.messageService.add('ItemService: fetched item: ' + itemId);\n    return this.http\n      .get(API_URL + this.serviceName + itemId, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: PUT\n  private updateItem(itemId, items): Observable<any> {\n    this.messageService.add('ItemService: updated transaction: ' + itemId);\n    return this.http\n      .put(API_URL + this.serviceName + itemId, items, opts)\n      .map(response => {\n        return response.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // API: DELETE\n  private deleteItemById(itemId: number): Observable<null> {\n    this.messageService.add('ItemService: deleted itemId: ' + itemId);\n    return this.http\n      .delete(API_URL + this.serviceName + itemId, opts)\n      .map(response => null)\n      .catch(this.handleError);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users.service.ts","module.exports = \".small {\\r\\n    font-size: small;\\r\\n}\\r\\n.title {\\r\\n    font-size: small;\\r\\n    background-color: cornflowerblue;\\r\\n    color: darkslategray;\\r\\n}\\r\\n.card {\\r\\n    margin: 4px;\\r\\n    text-align: center;\\r\\n}\\r\\n.chip {\\r\\n    margin: 2px;\\r\\n    width: 100px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.css\n// module id = ./src/app/users/users.component.css\n// module chunks = main","module.exports = \"<mat-divider></mat-divider>\\n<button [disabled]=\\\"users==null\\\" mat-raised-button (click)=\\\"toggleUsers()\\\">Show/hide users</button>\\n<button [disabled]=\\\"users==null\\\" mat-raised-button (click)=\\\"createModerator()\\\">Make</button>\\n<button [disabled]=\\\"users==null\\\" mat-raised-button (click)=\\\"deleteAllUsers()\\\">Delete all</button>\\n<div [hidden]=\\\"showUsers\\\">\\n    <mat-grid-list cols=\\\"6\\\" rowHeight=\\\"300px\\\">\\n        <mat-grid-tile *ngFor=\\\"let user of users\\\">\\n            <mat-card class=\\\"card\\\">\\n                <mat-card-title class=\\\"title\\\">User #{{user.id}}</mat-card-title>\\n                <div class=\\\"small\\\">Nickname: {{user.nickName}}</div>\\n                <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\n                    <mat-chip class=\\\"chip\\\" [selected]=\\\"user.group===group.id\\\" *ngFor=\\\"let group of groups\\\" (click)=\\\"groupSelect(group.id)\\\" ngDefaultControl>{{group.name}}</mat-chip>\\n                </mat-chip-list>\\n                <a mat-button routerLink=\\\"/user/{{user.id}}\\\">Show</a>\\n            </mat-card>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.html\n// module id = ./src/app/users/users.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../user';\nimport { Group } from '../group';\nimport { UsersService } from '../users.service';\nimport { GroupService } from '../group.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\n\nexport class UsersComponent implements OnInit {\n  @Input() users: User[];  \n  @Input() showUsers: boolean\n  groups: Group[]\n  \n  constructor(\n    private usersService: UsersService,\n    private groupService: GroupService\n  ) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.getGroups()\n  }\n  getUsers(): void {\n    this.usersService.getSharedItems()\n    this.usersService.items$.subscribe(users => {\n          this.users = users\n    });\n  }\n  public toggleUsers() {\n    this.showUsers = !this.showUsers\n  }\n\n  public deleteAllUsers() {\n    this.usersService.deleteAllSharedItem()\n  }\n\n  public createModerator() {\n    let user = new User({ \"nickName\": \"Moderator\", \"publicKey\": \"\", \"group\": 0, blockchain: [] })\n    this.usersService.createSharedItem(user)\n  }\n  getGroups(): void {\n    this.groupService.getGroups()\n      .subscribe(groups => {\n        this.groups = groups\n      });\n  }\n  ngOnDestroy(){\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.component.ts","module.exports = \".content {\\r\\n    background-color: lightblue;\\r\\n}\\r\\n.card {\\r\\n    margin: 4px;\\r\\n}\\r\\n.footer {\\r\\n    background-color: lightblue;\\r\\n    font-size: smaller;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/verify/verify.component.css\n// module id = ./src/app/verify/verify.component.css\n// module chunks = main","module.exports = \"<div [hidden]=\\\"!showVerifyBC\\\">\\n  <div *ngFor=\\\"let block of blocks\\\">\\n    <mat-card class=\\\"card\\\">\\n      <mat-card-header>\\n        <mat-card-title>Block</mat-card-title>\\n        <mat-card-subtitle>contents of block {{block.id}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div>\\n          <mat-label>Nonce: </mat-label>{{block.nonce}}</div>\\n        <div>\\n          <mat-label>Hash: </mat-label>\\n          <div class=\\\"content\\\">{{block.hash}}</div>\\n        </div>\\n      </mat-card-content>\\n      <mat-card-actions></mat-card-actions>\\n      <mat-card-footer>Previous Hash: \\n        <div class=\\\"content\\\">\\n          {{block.previousHash}}</div>\\n      </mat-card-footer>\\n    </mat-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/verify/verify.component.html\n// module id = ./src/app/verify/verify.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Block } from '../block'\nimport { BlocksService } from '../blocks.service'\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  @Input() showVerifyBC: boolean\n  @Input() blocks: Block[]\n\n  constructor(\n    private messageService: MessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/verify/verify.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl: 'http://10.15.244.38:3030',\n  //chatUrl: 'ws://10.15.244.38:8080',\n  //chatUrl: 'wss://demowsserver.azurewebsites.net:8080',\n  //chatUrl: 'wss://demowsserver.azurewebsites.net:3000',\n  apiUrl: 'http://192.168.2.12:3030',\n  chatUrl: 'ws:/192.168.2.12:8080',\n  //chatUrl: 'wss:/40.91.213.85:8080',\n  //apiUrl: 'http://10.15.244.29:3000',\n  //chatUrl: 'ws:/10.15.244.29:8080',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}